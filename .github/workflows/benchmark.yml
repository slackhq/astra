name: Benchmarks
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - "**"

# Required for comment permissions
# https://docs.github.com/en/rest/overview/permissions-required-for-github-apps?apiVersion=2022-11-28#repository-permissions-for-contents
permissions:
  pull-requests: write
  issues: write
  contents: write
  deployments: write

jobs:
  benchmark:
    name: Run JMH benchmark
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'
      - name: Run benchmark
        run: |
          mvn clean package -B -Dstyle.color=always -DskipTests=true --file pom.xml
          java -Dlog4j.configurationFile=benchmarks/log4j2.xml -Xms4g -Xmx4g -jar benchmarks/target/benchmarks.jar -wi 1 -i 1 -f 1 -rf json
      - name: Build output
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
  
            const rawThisRun = fs.readFileSync('jmh-result.json', 'utf8');
            const rawLastRun = fs.readFileSync('jmh-result.json', 'utf8');
            
            console.log(rawThisRun);
            console.log(rawLastRun);
            
            const parsedThisRun = JSON.parse(rawThisRun);
            const parsedLastRun = JSON.parse(rawLastRun);
                    
            const map = new Map();
            parsedThisRun.forEach(run => {
              if (map.has(run.benchmark)) {
                map.get(run.benchmark).push(run);
              } else {
                map.set(run.benchmark, [run])
              }
            });
              
            parsedLastRun.forEach(run => {
              if (map.has(run.benchmark)) {
                map.get(run.benchmark).push(run);
              } else {
                map.set(run.benchmark, [run])
              }
            });
              
            const header =    "|   |master|thisPr|delta|"
            const subheader = "|---|------|------|-----|"
            let rows = "";
            
            map.forEach((data, key) => {
              const lastRunVal = data[0].primaryMetric.score;
              const thisRunVal = data[1].primaryMetric.score;
              const delta = (thisRunVal - lastRunVal) / lastRunVal * 100;
              rows = rows + `|${key}|${lastRunVal.toFixed(1)}|${thisRunVal.toFixed(1)}|${delta > 0 ? "+" : "-"}${delta.toFixed(1)}%|\n`
              // todo - if too much regression, fail
            });
            
            const op = `${header}\n${subheader}\n${rows}`;
            console.log(op);
            core.exportVariable('JMH_OP', op);
      - name: Add job summary
        run: |
          echo "${JMH_OP}" >> $GITHUB_STEP_SUMMARY
      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const { JMH_OP } = process.env
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `${JMH_OP}`
            })
      - name: Add benchmark artifact
        # if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@v3
        with:
          name: jmh-summary.json
          path: jmh-summary.json
          retention-days: 5
          #path: ${{ github.workspace }}
      #- name: Download all benchmark previous results
      #  uses: actions/download-artifact@v3
      #  with:
      #    path: benchmark-results
#      - name: List artifacts
#        uses: actions/github-script@v6
#        with:
#          script: |
#            github.rest.actions.listArtifactsForRepo({
#              context.repo.owner,
#              context.repo.repo,
#            })


#      - name: Comment benchmark result
#        uses: benchmark-action/github-action-benchmark@v1
#        if: github.event_name == 'pull_request'
#        with:
#          name: JMH Benchmark
#          tool: 'jmh'
#          output-file-path: jmh-result.json
#          github-token: ${{ secrets.GITHUB_TOKEN }}
#          gh-pages-branch: benchmarks
#          # This is important to prevent PRs from pushing results
#          # https://github.com/benchmark-action/github-action-benchmark#run-only-on-your-branches
#          auto-push: false
#          fail-threshold: '200%'
#          #comment-on-alert: false
#          comment-always: true
#          #fail-on-alert: false
#          # https://github.com/benchmark-action/github-action-benchmark/issues/158
#          # summary-always: true
#      - name: Store benchmark result
#        uses: benchmark-action/github-action-benchmark@v1
#        if: github.event_name != 'pull_request'
#        with:
#          name: JMH Benchmark
#          tool: 'jmh'
#          output-file-path: jmh-result.json
#          github-token: ${{ secrets.GITHUB_TOKEN }}
#          gh-pages-branch: benchmarks
#          auto-push: true
#          # Show alert with commit comment on detecting possible performance regression
#          alert-threshold: '200%'
#          fail-threshold: '200%'
#          # Enable alert commit comment
#          comment-on-alert: true
#          comment-always: true
#          fail-on-alert: false

          # Enable Job Summary for PRs
          # https://github.com/benchmark-action/github-action-benchmark/issues/158
          # summary-always: true

