syntax = "proto3";

package slack.proto.kaldb;

option java_package = "com.slack.kaldb.proto.config";

enum NodeRole {
    INDEX = 0;
    QUERY = 1;
    CACHE = 2;
    MANAGER = 3;
    RECOVERY = 4;
};

message KaldbConfig {
    KafkaConfig kafkaConfig = 1;
    S3Config s3Config = 2;
    IndexerConfig indexerConfig = 3;
    QueryServiceConfig queryConfig = 4;
    MetadataStoreConfig metadataStoreConfig = 5;
    repeated NodeRole nodeRoles = 6;
    TracingConfig tracingConfig = 7;
    CacheConfig cacheConfig = 8;
    ManagerConfig managerConfig = 9;
    RecoveryConfig recoveryConfig = 10;
}

message KafkaConfig {
    string kafkaTopic = 1;
    string kafkaTopicPartition = 2;
    string kafkaBootStrapServers = 3;
    string kafkaClientGroup = 4;
    string enableKafkaAutoCommit = 5;
    string kafkaAutoCommitInterval = 6;
    string kafkaSessionTimeout = 7;
}

message MetadataStoreConfig {
    ZookeeperConfig zookeeperConfig = 1;
}

message ZookeeperConfig {
    string zkConnectString = 1;
    string zkPathPrefix = 2;
    int32 zkSessionTimeoutMs = 3;
    int32 zkConnectionTimeoutMs = 4;
    int32 sleepBetweenRetriesMs = 5;
}

message S3Config {
    string s3AccessKey = 1;
    string s3SecretKey = 2;
    string s3Region = 3;
    string s3EndPoint = 4;
    string s3Bucket = 5;
}

message TracingConfig {
    string zipkinEndpoint = 1;
}

message QueryServiceConfig {
    ServerConfig serverConfig = 1;
}

message IndexerConfig {
    int64 maxMessagesPerChunk = 1;
    int64 maxBytesPerChunk = 2;
    int64 commitDurationSecs = 3;
    int64 refreshDurationSecs = 4;
    int64 staleDurationSecs= 5;
    string dataTransformer = 6;
    string dataDirectory = 7;
    ServerConfig serverConfig = 8;
}

message ServerConfig {
    int32 serverPort = 1;
    string serverAddress = 2;
}

message CacheConfig {
    int32 slotsPerInstance = 1;
    string dataDirectory = 2;
    ServerConfig serverConfig = 3;
}

message ManagerConfig {
    message ReplicaCreationServiceConfig {
        int32 replicasPerSnapshot = 1;
        int32 schedulePeriodMins = 2;
        int32 replicaLifespanMins = 3;
    }

    message ReplicaAssignmentServiceConfig {
        int32 schedulePeriodMins = 1;
    }

    message ReplicaEvictionServiceConfig {
        int32 schedulePeriodMins = 1;
    }

    message ReplicaDeletionServiceConfig {
        int32 schedulePeriodMins = 1;
    }

    message RecoveryTaskAssignmentServiceConfig {
        int32 schedulePeriodMins = 1;
    }

    int32 eventAggregationSecs = 1;
    int32 scheduleInitialDelayMins = 2;
    ServerConfig serverConfig = 3;

    ReplicaCreationServiceConfig replicaCreationServiceConfig = 4;
    ReplicaAssignmentServiceConfig replicaAssignmentServiceConfig = 5;
    ReplicaEvictionServiceConfig replicaEvictionServiceConfig = 6;
    ReplicaDeletionServiceConfig replicaDeletionServiceConfig = 7;
    RecoveryTaskAssignmentServiceConfig recoveryTaskAssignmentServiceConfig = 8;
}

message RecoveryConfig {
    ServerConfig serverConfig = 1;
}
